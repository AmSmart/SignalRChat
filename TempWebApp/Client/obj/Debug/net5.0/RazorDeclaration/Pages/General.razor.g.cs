// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SignalRChat.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using SignalRChat.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\_Imports.razor"
using SignalRChat.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\Pages\General.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/general")]
    public partial class General : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 35 "C:\Users\Engineer Smart\source\repos\SignalRChat\TempWebApp\Client\Pages\General.razor"
       

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    HubConnection _connection = null;
    bool isConnected = false;
    string connectionStatus = "Closed";
    string Message;
    string Name;
    List<KeyValuePair<string, string>> notifications = new List<KeyValuePair<string, string>>();

    private async Task Send()
    {
        if (string.IsNullOrEmpty(Name) || string.IsNullOrEmpty(Message))
        {
            string errorMessage = "Name and Message textboxes cannot be blank";
            await JSRuntime.InvokeAsync<object>("Alert", errorMessage);
            return;
        }
        await httpClient.PostAsync($"{NavigationManager.BaseUri}posttoall?userName={Name}&message={Message}", null);
    }

    private async Task ConnectToServer()
    {
        string url = $"{NavigationManager.BaseUri}notificationhub";
        _connection = new HubConnectionBuilder()
        .WithUrl(url)
        .Build();

        await _connection.StartAsync();
        isConnected = true;
        connectionStatus = "Connected ðŸ˜œ";

        _connection.Closed += async (s) =>
        {
            isConnected = false;
            connectionStatus = "Disconnected";
            await _connection.StartAsync();
            isConnected = true;
        };

        _connection.On<string, string>("notification", (user, message) =>
        {
            notifications.Add(KeyValuePair.Create(user, message));
            StateHasChanged();
        });
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient httpClient { get; set; }
    }
}
#pragma warning restore 1591
